{"version":3,"sources":["utilites/CalcHeading.js","utilites/ResultOfCalculation.js","components/AlienationContractCalc.js","components/ComputerProgramRegCalc.js","components/AlterationCalc.js","components/ExpertiseCalc.js","components/FIPSRegisters.js","components/OrgSearch.js","App.js","index.js"],"names":["CalcHeading","props","className","name","ResultOfCalculation","result","AlienationContractCalc","useState","baseCost","setBaseCost","trademarkCount","setTrademarkCount","isCountBaseCost","setIsCountBaseCost","Form","Group","controlId","Label","Control","type","placeholder","value","onChange","e","Number","target","min","Check","id","label","checked","fee","calculateTotalServiceCost","ComputerProgramRegCalc","additionalCost","setAdditionalCost","getAdditionalCostFromClientType","AlterationCalc","requestAlterationBaseCost","setRequestAlterationBaseCost","requestAlterationCount","setRequestAlterationCount","trademarkAlterationBaseCost","setTrademarkAlterationBaseCost","trademarkAlterationCount","setTrademarkAlterationCount","Row","Col","sm","ExpertiseCalc","classesCount","isElectronic","hasComission","comissionPercent","formalExpertise","setFormalExperise","substantiveExpertise","setSubstantiveExperise","registrationFee","setRegistrationFee","handleValueChange","property","handleBooleanPropertyChange","calcMinusPercent","percent","calcPlusPercent","calculateResult","md","style","cursor","disabled","FIPSRegisters","zayav","setZayav","resultLink","setResultLink","register","setRegister","registers","izobr","izobrPatent","polezModel","zayavPatentModel","promyshObraz","zayavPromyshObraz","tovZnak","zayavTovZnak","tovZnakInternational","NMPT","zayavNMPT","EVM","database","gosZayav","returnLink","useCallback","useEffect","onSubmit","preventDefault","window","location","as","href","rel","AttributesList","data","setCopied","text","setText","document","querySelector","innerText","Object","keys","length","console","log","short_with_opf","full_with_opf","full_address","address","unrestricted_value","kpp","inn","ogrn","Card","Header","Body","management","post","Footer","onCopy","OrgSearch","suggestion","setSuggestion","htmlFor","token","App","Container","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a0027956.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst CalcHeading = props => {\n    return (\n        <Fragment>\n            <h2 className=\"text-center mb-4\">{props.name}</h2>\n            <hr />\n        </Fragment>\n    );\n};\n\nexport default CalcHeading;\n","import React from \"react\";\n\nconst ResultOfCalculation = props => {\n    return (\n        <p>\n            <strong>Итоговая стоимость услуги: {props.result}</strong>\n        </p>\n    );\n};\n\nexport default ResultOfCalculation;\n","import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport CalcHeading from \"../utilites/CalcHeading\";\nimport ResultOfCalculation from \"../utilites/ResultOfCalculation\";\n\n// Калькулятор регистрации договора отчуждения, лицензиарного и сублицензиарного договора\nconst AlienationContractCalc = () => {\n    // Константы\n    const basicCost = 25000; // Базовая стоимость услуги по дефолту\n    const trademarkBasicCost = 13500; // Стоимость за один товарный знак\n    const extraTrademarkCost = 11500; // Стоимость за каждый товарный знак выше одного\n\n    const [baseCost, setBaseCost] = useState(basicCost);\n    const [trademarkCount, setTrademarkCount] = useState(1);\n    const [isCountBaseCost, setIsCountBaseCost] = useState(true); // Boolean-значение, отвечающее за то, нужно ли складывать стоимость услуги с пошлиной\n\n    const calculateTotalServiceCost = (trademarkCount = 0) => {\n        if (trademarkCount === 0) return 0;\n\n        const fee =\n            trademarkCount === 1\n                ? trademarkBasicCost\n                : trademarkBasicCost +\n                  (trademarkCount - 1) * extraTrademarkCost;\n\n        /**\n         * Рассчет идет по принципу:\n         * стоимость пошлины - если ТЗ один, то +13500; если ТЗ больше двух, то один считается как +13500, а кол-во остальных умножается на 11500 и прибавляется к общей сумме)\n         * Галочка отвечает за складывание пошлины с базовой стоимостью услуги\n         */\n        return isCountBaseCost ? baseCost + fee : fee;\n    };\n\n    return (\n        <div className=\"jumbotron\">\n            <CalcHeading name=\"Договор отчуждения, лицензионнный и cублицензионный договор\" />\n            <Form>\n                <Form.Group controlId=\"alienationServiceCost\">\n                    <Form.Label>Стоимость услуги</Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        placeholder=\"Введите стоимость услуги\"\n                        value={baseCost}\n                        onChange={e => setBaseCost(Number(e.target.value))}\n                    />\n                </Form.Group>\n                <Form.Group controlId=\"trademarkCount\">\n                    <Form.Label>Количество товарных знаков</Form.Label>\n                    <Form.Control\n                        type=\"number\"\n                        min=\"1\"\n                        placeholder=\"Введите количество товарных знаков\"\n                        value={trademarkCount}\n                        onChange={e =>\n                            setTrademarkCount(Number(e.target.value))\n                        }\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Check\n                        type=\"checkbox\"\n                        id=\"isCountBaseCost\"\n                        label=\"Сложить пошлину со стоимостью услуги\"\n                        checked={isCountBaseCost}\n                        onChange={e => setIsCountBaseCost(e.target.checked)}\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <ResultOfCalculation\n                        result={calculateTotalServiceCost(trademarkCount)}\n                    />\n                </Form.Group>\n                <Form.Group>\n                    <small className=\"text-muted\">\n                        Расчет пошлины идет по принципу: если ТЗ один, то\n                        +13500; если ТЗ больше двух, то один считается как\n                        +13500, а кол-во остальных умножается на 11500 и\n                        прибавляется к общей сумме. Галочка \"Сложить пошлину\"\n                        складывает стоимость услуги с пошлиной.\n                    </small>\n                </Form.Group>\n            </Form>\n        </div>\n    );\n};\n\nexport default AlienationContractCalc;\n","import React, { Fragment, useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport CalcHeading from \"../utilites/CalcHeading\";\nimport ResultOfCalculation from \"../utilites/ResultOfCalculation\";\n\n// Калькулятор для регистрации ЭВМ\nconst ComputerProgramRegCalc = () => {\n    // Константы\n    const basicCost = 25000; // Базовая стоимость услуги по дефолту\n    const yurCost = 4500; // Доп. стоимость для юридических лиц\n    const fizCost = 3500; // Доп. стоимость для физических лиц\n\n    const [baseCost, setBaseCost] = useState(basicCost); // Стейт для базовой стоимости\n    const [additionalCost, setAdditionalCost] = useState(0); // Стейт дополнительной стоимости\n\n    // Возвращаем дополнительную стоимость в зависимости от типа клиента\n    const getAdditionalCostFromClientType = type => {\n        switch (type) {\n            case \"fiz\":\n                return fizCost;\n            case \"yur\":\n                return yurCost;\n            default:\n                return 0;\n        }\n    };\n\n    return (\n        <Fragment>\n            {/* Небольшая стилизация (согласно документации react-bootstrap) */}\n            <style type=\"text/css\">\n                {`\n                    .form-check-label,\n                    .form-check-input {\n                       cursor:pointer;\n                    }\n                `}\n            </style>\n            <div className=\"jumbotron\">\n                <CalcHeading name=\"Программа ЭВМ\" />\n                <Form>\n                    <Form.Group>\n                        <Form.Group controlId=\"programRegisterServiceCost\">\n                            <Form.Label>Стоимость услуги</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"Введите стоимость услуги\"\n                                value={baseCost}\n                                onChange={e =>\n                                    setBaseCost(Number(e.target.value))\n                                }\n                            />\n                        </Form.Group>\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Для юридических лиц (+4500)\"\n                            name=\"clientType\"\n                            value=\"yur\"\n                            id=\"program-yur\"\n                            onChange={e =>\n                                setAdditionalCost(\n                                    getAdditionalCostFromClientType(\n                                        e.target.value\n                                    )\n                                )\n                            }\n                        />\n                        <Form.Check\n                            type=\"radio\"\n                            label=\"Для физических лиц (+3500)\"\n                            name=\"clientType\"\n                            value=\"fiz\"\n                            id=\"program-fiz\"\n                            onChange={e =>\n                                setAdditionalCost(\n                                    getAdditionalCostFromClientType(\n                                        e.target.value\n                                    )\n                                )\n                            }\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <ResultOfCalculation\n                            result={baseCost + additionalCost}\n                        />\n                    </Form.Group>\n                </Form>\n            </div>\n        </Fragment>\n    );\n};\n\nexport default ComputerProgramRegCalc;\n","import React, { useState } from \"react\";\nimport CalcHeading from \"../utilites/CalcHeading\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport ResultOfCalculation from \"../utilites/ResultOfCalculation\";\n\n// Калькулятор для внесения изменений\nconst AlterationCalc = () => {\n    // Константы\n    const basicCost = 5000; // Базовая стоимость услуги по дефолту\n\n    const [requestAlterationBaseCost, setRequestAlterationBaseCost] = useState(\n        basicCost\n    ); // Стейт для базовой стоимости услуги по внесению изменений в заявках\n    const [requestAlterationCount, setRequestAlterationCount] = useState(1); // Стейт для количества изменений в заявках\n\n    const [\n        trademarkAlterationBaseCost,\n        setTrademarkAlterationBaseCost\n    ] = useState(basicCost); // Стейт для базовой стоимости услуги по внесению изменений в ТЗ\n    const [trademarkAlterationCount, setTrademarkAlterationCount] = useState(1); // Стейт для количества изменений в ТЗ\n\n    // Считаем стоимость услуги по изменениям в товарные знаках\n    const calculateTrademarkAlteration = () => {\n        const perOneAlteration = 2800;\n        const additionalFee = 2000;\n\n        return (\n            trademarkAlterationBaseCost +\n            perOneAlteration * trademarkAlterationCount +\n            additionalFee\n        );\n    };\n\n    return (\n        <div className=\"jumbotron mb-4\">\n            <CalcHeading name=\"Внесение изменений\" />\n            <Row>\n                <Col sm=\"6\">\n                    <h4>Изменения в заявках</h4>\n                    <Form.Group controlId=\"requestAlterationServiceCost\">\n                        <Form.Label>Стоимость услуги</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            placeholder=\"Введите стоимость услуги\"\n                            value={requestAlterationBaseCost}\n                            onChange={e =>\n                                setRequestAlterationBaseCost(\n                                    Number(e.target.value)\n                                )\n                            }\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"requestAlterationCount\">\n                        <Form.Label>Количество заявок</Form.Label>\n                        <Form.Control\n                            type=\"number\"\n                            min=\"1\"\n                            placeholder=\"Введите количество\"\n                            value={requestAlterationCount}\n                            onChange={e =>\n                                setRequestAlterationCount(\n                                    Number(e.target.value)\n                                )\n                            }\n                        />\n                    </Form.Group>\n                    <Form.Group>\n                        <ResultOfCalculation\n                            result={\n                                requestAlterationBaseCost *\n                                requestAlterationCount\n                            }\n                        />\n                    </Form.Group>\n                </Col>\n                <Col sm=\"6\">\n                    <Form>\n                        <h4>Изменения в ТЗ</h4>\n                        <Form.Group controlId=\"trademarkAlterationServiceCost\">\n                            <Form.Label>Стоимость услуги</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"Введите стоимость услуги\"\n                                value={trademarkAlterationBaseCost}\n                                onChange={e =>\n                                    setTrademarkAlterationBaseCost(\n                                        Number(e.target.value)\n                                    )\n                                }\n                            />\n                        </Form.Group>\n                        <Form.Group controlId=\"trademarkAlterationCount\">\n                            <Form.Label>Количество знаков</Form.Label>\n                            <Form.Control\n                                type=\"number\"\n                                min=\"1\"\n                                placeholder=\"Введите количество\"\n                                value={trademarkAlterationCount}\n                                onChange={e =>\n                                    setTrademarkAlterationCount(\n                                        Number(e.target.value)\n                                    )\n                                }\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <ResultOfCalculation\n                                result={calculateTrademarkAlteration()}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <small className=\"text-muted\">\n                                Рассчет идет по принципу: базовая стоимость\n                                услуги + (2800 * количество знаков) + 2000\n                            </small>\n                        </Form.Group>\n                    </Form>\n                </Col>\n            </Row>\n        </div>\n    );\n};\n\nexport default AlterationCalc;\n","import React, { useState, Fragment } from \"react\";\nimport { Form, Row, Col } from \"react-bootstrap\";\nimport ResultOfCalculation from \"../utilites/ResultOfCalculation\";\n\n/**\n * Калькулятор для\n * формальной экспертизы (formalExpertise)\n * экспертизы по существу (substantiveExpertise)\n * пошлины для регистрации (registrationFee)\n */\nconst ExpertiseCalc = () => {\n    // Объекты данных с форм\n    const [formalExpertise, setFormalExperise] = useState({\n        classesCount: 1,\n        isElectronic: false,\n        hasComission: false,\n        comissionPercent: 3\n    });\n\n    const [substantiveExpertise, setSubstantiveExperise] = useState({\n        classesCount: 1,\n        isElectronic: false,\n        hasComission: false,\n        comissionPercent: 3\n    });\n\n    const [registrationFee, setRegistrationFee] = useState({\n        classesCount: 1,\n        isElectronic: false,\n        hasComission: false,\n        comissionPercent: 3\n    });\n\n    // Обработчик для свойств, имеющих числовое значение (кол-во классов, комиссия банка)\n    // Type - тип объекта (formal, substantive, registration)\n    // Property - свойство (classesCount, comissionPercent)\n    const handleValueChange = (type, property, value) => {\n        switch (type) {\n            case \"formal\":\n                setFormalExperise({ ...formalExpertise, [property]: value });\n                break;\n            case \"substantive\":\n                setSubstantiveExperise({\n                    ...substantiveExpertise,\n                    [property]: value\n                });\n                break;\n            case \"registration\":\n                setRegistrationFee({ ...registrationFee, [property]: value });\n                break;\n            default:\n                break;\n        }\n    };\n\n    // Обработчик для свойств, имеющих булево значение (электронная ли заявка, есть ли комиссия банка)\n    // Type - тип объекта (formal, substantive, registration)\n    // Property - свойство (isElectronic, hasComission)\n    const handleBooleanPropertyChange = (type, property) => {\n        switch (type) {\n            case \"formal\":\n                setFormalExperise({\n                    ...formalExpertise,\n                    [property]: !formalExpertise[property]\n                });\n                break;\n            case \"substantive\":\n                setSubstantiveExperise({\n                    ...substantiveExpertise,\n                    [property]: !substantiveExpertise[property]\n                });\n                break;\n            case \"registration\":\n                setRegistrationFee({\n                    ...registrationFee,\n                    [property]: !registrationFee[property]\n                });\n                break;\n            default:\n                break;\n        }\n    };\n\n    // Помощники для подсчета процентов\n    const calcMinusPercent = (value, percent) => {\n        return value - (value / 100) * percent;\n    };\n\n    const calcPlusPercent = (value, percent) => {\n        return value + (value / 100) * percent;\n    };\n\n    const calculateResult = type => {\n        let result = 0;\n        switch (type) {\n            case \"formal\":\n                // Первичный подсчет\n                if (formalExpertise.classesCount <= 5) {\n                    result = 3500;\n                } else {\n                    result = 3500 + (formalExpertise.classesCount - 5) * 1000;\n                }\n\n                // С учетом электронной подачи\n                if (formalExpertise.isElectronic) {\n                    result = calcMinusPercent(result, 30);\n                }\n\n                // Комиссия банка\n                if (formalExpertise.hasComission) {\n                    result = calcPlusPercent(\n                        result,\n                        formalExpertise.comissionPercent\n                    );\n                }\n                return result;\n            case \"substantive\":\n                if (substantiveExpertise.classesCount === 1) {\n                    result = 11500;\n                } else {\n                    result =\n                        11500 + (substantiveExpertise.classesCount - 1) * 2500;\n                }\n\n                // С учетом электронной подачи\n                if (substantiveExpertise.isElectronic) {\n                    result = calcMinusPercent(result, 30);\n                }\n\n                // Комиссия банка\n                if (substantiveExpertise.hasComission) {\n                    result = calcPlusPercent(\n                        result,\n                        substantiveExpertise.comissionPercent\n                    );\n                }\n\n                return result;\n            case \"registration\":\n                // Первичный подсчет\n                if (registrationFee.classesCount <= 5) {\n                    result = 18000;\n                } else {\n                    result = 18000 + (registrationFee.classesCount - 5) * 1000;\n                }\n\n                // С учетом электронной подачи\n                if (registrationFee.isElectronic) {\n                    result = calcMinusPercent(result, 30);\n                }\n\n                // Комиссия банка\n                if (registrationFee.hasComission) {\n                    result = calcPlusPercent(\n                        result,\n                        registrationFee.comissionPercent\n                    );\n                }\n                return result;\n            default:\n                break;\n        }\n    };\n\n    return (\n        <Fragment>\n            <style type=\"text/css\">\n                {`\n                    .form-check-label,\n                    .form-check-input {\n                       cursor:pointer;\n                    }\n                `}\n            </style>\n            <div className=\"jumbotron\">\n                <Row>\n                    <Col md=\"4\">\n                        <h4 className=\"text-center\">Формальная экспертиза</h4>\n                        <hr />\n                        <Form>\n                            <Form.Group controlId=\"formalClassesCount\">\n                                <Form.Label>Количество классов</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    min=\"1\"\n                                    placeholder=\"Введите количество\"\n                                    value={formalExpertise.classesCount}\n                                    onChange={e =>\n                                        handleValueChange(\n                                            \"formal\",\n                                            \"classesCount\",\n                                            Number(e.target.value)\n                                        )\n                                    }\n                                />\n                            </Form.Group>\n                            <Form.Group\n                                controlId=\"formalElectronic\"\n                                style={{ cursor: \"pointer\" }}\n                            >\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label=\"Заявка в электронном виде\"\n                                    value={formalExpertise.isElectronic}\n                                    onChange={e =>\n                                        handleBooleanPropertyChange(\n                                            \"formal\",\n                                            \"isElectronic\"\n                                        )\n                                    }\n                                />\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id=\"formalHasComission\"\n                                    label=\"Учитывать комиссию банка\"\n                                    value={formalExpertise.hasComission}\n                                    onChange={e =>\n                                        handleBooleanPropertyChange(\n                                            \"formal\",\n                                            \"hasComission\"\n                                        )\n                                    }\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"formalComissionPercent\">\n                                <Form.Label>Комиссия банка</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    min=\"1\"\n                                    placeholder=\"Введите комиссию\"\n                                    value={formalExpertise.comissionPercent}\n                                    onChange={e =>\n                                        handleValueChange(\n                                            \"formal\",\n                                            \"comissionPercent\",\n                                            Number(e.target.value)\n                                        )\n                                    }\n                                    disabled={!formalExpertise.hasComission}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <ResultOfCalculation\n                                    result={calculateResult(\"formal\")}\n                                />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                    <Col md=\"4\">\n                        <h4 className=\"text-center\">Экспертиза по существу</h4>\n                        <hr />\n                        <Form>\n                            <Form.Group controlId=\"substantiveClassesCount\">\n                                <Form.Label>Количество классов</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    min=\"1\"\n                                    placeholder=\"Введите количество\"\n                                    value={substantiveExpertise.classesCount}\n                                    onChange={e =>\n                                        handleValueChange(\n                                            \"substantive\",\n                                            \"classesCount\",\n                                            Number(e.target.value)\n                                        )\n                                    }\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"substantiveElectronic\">\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label=\"Заявка в электронном виде\"\n                                    value={substantiveExpertise.isElectronic}\n                                    onChange={e =>\n                                        handleBooleanPropertyChange(\n                                            \"substantive\",\n                                            \"isElectronic\"\n                                        )\n                                    }\n                                />\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id=\"substantiveHasComission\"\n                                    label=\"Учитывать комиссию банка\"\n                                    value={substantiveExpertise.hasComission}\n                                    onChange={e =>\n                                        handleBooleanPropertyChange(\n                                            \"substantive\",\n                                            \"hasComission\"\n                                        )\n                                    }\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"substantiveComissionPercent\">\n                                <Form.Label>Комиссия банка</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    min=\"1\"\n                                    placeholder=\"Введите комиссию\"\n                                    value={\n                                        substantiveExpertise.comissionPercent\n                                    }\n                                    onChange={e =>\n                                        handleValueChange(\n                                            \"substantive\",\n                                            \"comissionPercent\",\n                                            Number(e.target.value)\n                                        )\n                                    }\n                                    disabled={\n                                        !substantiveExpertise.hasComission\n                                    }\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <ResultOfCalculation\n                                    result={calculateResult(\"substantive\")}\n                                />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                    <Col md=\"4\">\n                        <h4 className=\"text-center\">Пошлина за регистрацию</h4>\n                        <hr />\n                        <Form>\n                            <Form.Group controlId=\"registrationClassesCount\">\n                                <Form.Label>Количество классов</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    min=\"1\"\n                                    placeholder=\"Введите количество\"\n                                    value={registrationFee.classesCount}\n                                    onChange={e =>\n                                        handleValueChange(\n                                            \"registration\",\n                                            \"classesCount\",\n                                            Number(e.target.value)\n                                        )\n                                    }\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"registrationElectronic\">\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    label=\"Заявка в электронном виде\"\n                                    value={registrationFee.isElectronic}\n                                    onChange={e =>\n                                        handleBooleanPropertyChange(\n                                            \"registration\",\n                                            \"isElectronic\"\n                                        )\n                                    }\n                                />\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id=\"registrationHasComission\"\n                                    label=\"Учитывать комиссию банка\"\n                                    value={registrationFee.hasComission}\n                                    onChange={e =>\n                                        handleBooleanPropertyChange(\n                                            \"registration\",\n                                            \"hasComission\"\n                                        )\n                                    }\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"registrationComissionPercent\">\n                                <Form.Label>Комиссия банка</Form.Label>\n                                <Form.Control\n                                    type=\"number\"\n                                    min=\"1\"\n                                    placeholder=\"Введите комиссию\"\n                                    value={registrationFee.comissionPercent}\n                                    onChange={e =>\n                                        handleValueChange(\n                                            \"registration\",\n                                            \"comissionPercent\",\n                                            Number(e.target.value)\n                                        )\n                                    }\n                                    disabled={!registrationFee.hasComission}\n                                />\n                            </Form.Group>\n                            <Form.Group>\n                                <ResultOfCalculation\n                                    result={calculateResult(\"registration\")}\n                                />\n                            </Form.Group>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n            <p className=\"h2\">\n                Итого (ФС + ЭС):{\" \"}\n                {calculateResult(\"formal\") + calculateResult(\"substantive\")}\n            </p>\n        </Fragment>\n    );\n};\n\nexport default ExpertiseCalc;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst FIPSRegisters = () => {\n    const [zayav, setZayav] = useState(\"\");\n    const [resultLink, setResultLink] = useState(\"\");\n    const [register, setRegister] = useState(\"\");\n\n    const registers = {\n        izobr:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUPAT&rn=4244&DocNumber=\",\n        izobrPatent:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUPATAP&rn=813&DocNumber=\",\n        polezModel:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUPM&rn=6113&DocNumber=\",\n        zayavPatentModel:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUPMAP&rn=6036&DocNumber=\",\n        promyshObraz:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUDE&DocNumber=\",\n        zayavPromyshObraz:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUDEAP&rn=9547&DocNumber=\",\n        tovZnak:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUTM&rn=9557&DocNumber=\",\n        zayavTovZnak:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUTMAP&rn=8782&DocNumber=\",\n        tovZnakInternational:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=WOTM&rn=1552&DocNumber=\",\n        NMPT:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUGP&DocNumber=\",\n        zayavNMPT:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=RUGPAP&rn=4612&DocNumber=\",\n        EVM:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=EVM&rn=8816&DocNumber=\",\n        database:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=DB&rn=6871&DocNumber=\",\n        gosZayav:\n            \"https://www.fips.ru/registers-doc-view/fips_servlet?DB=PRAVO&rn=1491&DocNumber=\"\n    };\n\n    const returnLink = useCallback(\n        type => {\n            return `${registers[type]}${zayav}&TypeFile=html`;\n        },\n        [registers, zayav]\n    );\n\n    useEffect(() => {\n        setResultLink(returnLink(register));\n    }, [zayav, register, returnLink]);\n\n    return (\n        <div className=\"jumbotron\">\n            <Form\n                onSubmit={e => {\n                    e.preventDefault();\n                    window.location = resultLink;\n                }}\n            >\n                <Form.Group controlId=\"register select\">\n                    <Form.Label>Выбрать реестр</Form.Label>\n                    <Form.Control\n                        as=\"select\"\n                        value={register}\n                        onChange={e => {\n                            setRegister(e.target.value);\n                        }}\n                    >\n                        <option value=\"\" disabled>\n                            Выбрать реестр\n                        </option>\n                        <optgroup label=\"Изобретения\">\n                            <option value=\"izobr\">Реестр изобретений</option>\n                            <option value=\"izobrPatent\">\n                                Реестр заявок на выдачу патента на изобретение\n                            </option>\n                        </optgroup>\n                        <optgroup label=\"Полезные модели\">\n                            <option value=\"polezModel\">\n                                Реестр полезных моделей\n                            </option>\n                            <option value=\"zayavPatentModel\">\n                                Реестр заявок на выдачу патента на полезную\n                                модель\n                            </option>\n                        </optgroup>\n                        <optgroup label=\"Промышленные образцы\">\n                            <option value=\"promyshObraz\">\n                                Реестр промышленных образцов\n                            </option>\n                            <option value=\"zayavPromyshObraz\">\n                                Реестр заявок на выдачу патента на промышленный\n                                образец\n                            </option>\n                        </optgroup>\n                        <optgroup label=\"Товарные знаки\">\n                            <option value=\"tovZnak\">\n                                Реестр товарных знаков и знаков обслуживания\n                            </option>\n                            <option value=\"zayavTovZnak\">\n                                Реестр заявок на регистрацию товарного знака и\n                                знака обслуживания\n                            </option>\n                            <option value=\"tovZnakInternational\">\n                                Реестр товарных знаков по международным\n                                регистрациям, по которым имеются сведения о\n                                зарегистрированных на территории Российской\n                                Федерации распоряжениях исключительным правом по\n                                договорам о предоставлении права использования\n                            </option>\n                        </optgroup>\n                        <optgroup label=\"Программы для ЭВМ, базы данных\">\n                            <option value=\"EVM\">Реестр программ для ЭВМ</option>\n                            <option value=\"database\">Реестр баз данных</option>\n                        </optgroup>\n                        <option value=\"gosZayav\">\n                            Реестр заявлений о государственной регистрации\n                            распоряжения исключительным правом по договору и\n                            заявлений о государственной регистрации перехода\n                            права без договора\n                        </option>\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group controlId=\"zayav enter\">\n                    <Form.Label>Номер заявки:</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Введите номер заявки\"\n                        value={zayav}\n                        onChange={e => {\n                            setZayav(e.target.value);\n                        }}\n                    />\n                </Form.Group>\n            </Form>\n            <div className=\"row\">\n                <p>\n                    Результирующая ссылка:{\" \"}\n                    <a\n                        href={resultLink}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        перейти\n                    </a>\n                </p>\n            </div>\n        </div>\n    );\n};\n\nexport default FIPSRegisters;\n","import React, { useState, useEffect, Fragment } from \"react\";\nimport ReactDadataBox from \"react-dadata-box\";\nimport { Card } from \"react-bootstrap\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nconst OrgSearch = () => {\n    const [suggestion, setSuggestion] = useState(null);\n\n    return (\n        <div className=\"jumbotron\">\n            <label htmlFor=\"react-dadata\">ИП, ИНН или организация</label>\n            <ReactDadataBox\n                id=\"react-dadata\"\n                token=\"6e004021e9b797bf936f09476945461720fbc68f\"\n                type=\"party\"\n                onChange={suggestion => setSuggestion(suggestion)}\n                placeholder=\"Введите ИП, Введите название в свободной форме, адрес, ИНН или ОГРН\"\n            />\n            {suggestion && <AttributesList data={suggestion.data} />}\n        </div>\n    );\n};\n\nconst AttributesList = ({ data }) => {\n    const [copied, setCopied] = useState(false);\n    const [text, setText] = useState(\"\");\n\n    useEffect(() => {\n        setText(document.querySelector(\".result-content\").innerText);\n    }, []);\n\n    if (Object.keys(data).length === 0) return null;\n    console.log(\"data :\", data);\n    const { short_with_opf, full_with_opf } = data.name;\n    const { unrestricted_value: full_address } = data.address;\n    const { kpp, inn, ogrn } = data;\n\n    return (\n        <Card className=\"my-4\">\n            <Card.Header>Карточка организации {full_with_opf}</Card.Header>\n            <Card.Body>\n                <ul className=\"result-content\">\n                    <li>Наименование - {short_with_opf}</li>\n                    <li>Полное наименование - {full_with_opf}</li>\n                    <li>Полный адрес - {full_address}</li>\n                    <li>ОГРН - {ogrn}</li>\n                    <li>ИНН - {inn}</li>\n                    <li>КПП - {kpp}</li>\n                    {data.management && (\n                        <Fragment>\n                            <li>ФИО руководителя - {data.management.name}</li>\n                            <li>\n                                Должность руководителя - {data.management.post}\n                            </li>\n                        </Fragment>\n                    )}\n                </ul>\n            </Card.Body>\n            <Card.Footer>\n                <CopyToClipboard text={text} onCopy={() => setCopied(true)}>\n                    <button className=\"btn btn-primary\">\n                        Скопировать текст\n                    </button>\n                </CopyToClipboard>\n            </Card.Footer>\n        </Card>\n    );\n};\n\nexport default OrgSearch;\n","import React from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport AlienationContractCalc from \"./components/AlienationContractCalc\";\nimport { Container } from \"react-bootstrap\";\nimport ComputerProgramRegCalc from \"./components/ComputerProgramRegCalc\";\nimport AlterationCalc from \"./components/AlterationCalc\";\nimport ExpertiseCalc from \"./components/ExpertiseCalc\";\nimport FIPSRegisters from \"./components/FIPSRegisters\";\nimport OrgSearch from \"./components/OrgSearch\";\n\nconst App = () => {\n    return (\n        <Container>\n            <h1 className=\"text-center\">Инструменты патентного поверенного</h1>\n            <Tabs>\n                <TabList>\n                    <Tab>Основной</Tab>\n                    <Tab>Другой</Tab>\n                    <Tab>Реестры ФИПС</Tab>\n                    <Tab>Поиск организаций и ИП</Tab>\n                </TabList>\n\n                <TabPanel>\n                    <ExpertiseCalc />\n                </TabPanel>\n                <TabPanel>\n                    <AlienationContractCalc />\n                    <hr />\n                    <ComputerProgramRegCalc />\n                    <hr />\n                    <AlterationCalc />\n                    <hr />\n                </TabPanel>\n                <TabPanel>\n                    <FIPSRegisters />\n                </TabPanel>\n                <TabPanel>\n                    <OrgSearch />\n                </TabPanel>\n            </Tabs>\n        </Container>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}