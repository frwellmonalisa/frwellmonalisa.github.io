{"version":3,"sources":["components/todos-list/todos-list.js","components/add-todo-form.js","components/progress-bar-for-list.js","components/todos-filter.js","components/list.js","app-helpers/filter-todos-by-type.js","components/add-list-form.js","components/about.js","app-helpers/insert-on-index.js","app-helpers/find-list-by-id.js","app-helpers/update-local-storage.js","app.js","app-helpers/create-new-list.js","app-helpers/create-new-todo.js","app-helpers/find-todo-by-id.js","index.js"],"names":["TodosList","todos","listID","onToggleTodo","onDeleteTodo","className","map","id","name","isDone","onClick","AddTodoForm","props","handleChange","e","preventDefault","setState","target","value","handleSubmit","state","onAddTodo","isError","this","onSubmit","type","placeholder","onChange","autoComplete","Component","ProgressBarForList","todosCount","length","isDoneTodosCount","filter","todo","max","TodosFilter","onFilterTodo","htmlFor","required","disabled","hidden","List","handleFilterTodo","list","title","description","onDeleteList","hasTodos","filteredTodos","filterTodosByType","style","marginTop","AddListForm","handleChangeTitle","handleChangeDescription","About","margin","Row","Col","md","href","rel","insertOnIndex","index","element","slice","findListById","lists","find","item","findIndex","updateLocalStorage","data","localStorage","setItem","App","handleAddList","newList","shortid","createNewList","JSON","stringify","handleDeleteList","filtered","handleAddTodo","newTodo","createNewTodo","listToEdit","listToEditIndex","editedList","handleToggleTodo","todoID","todoToEdit","todoToEditIndex","editedTodo","handleDeleteTodo","getItem","parse","lg","Container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.679c3fac.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./todos-list.css\"\n\nexport const TodosList = ({ todos, listID, onToggleTodo, onDeleteTodo }) => {\n  return (\n    <ul className=\"nes-list is-disc todos-list\">\n      {todos.map(({ id, name, isDone }) => (\n        <li key={id}>\n          <span\n            className=\"nes-text is-error nes-pointer\"\n            onClick={() => onDeleteTodo(listID, id)}\n          >\n            [x]\n          </span>\n          {\" \" + name + \" \"}\n          <span\n            className={`nes-text nes-pointer ${\n              isDone ? \"is-success\" : \"is-error\"\n            }`}\n            onClick={() => onToggleTodo(listID, id)}\n          >\n            {isDone ? \"[завершено]\" : \"[незавершено]\"}\n          </span>\n        </li>\n      ))}\n    </ul>\n  )\n}\n","import React, { Component } from \"react\"\n\nexport class AddTodoForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: \"\",\n      isError: false,\n    }\n  }\n\n  handleChange = (e) => {\n    e.preventDefault()\n\n    this.setState({\n      name: e.target.value,\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { name } = this.state\n\n    // Проверка на пустое поле названия списка\n    if (name === \"\") {\n      this.setState({\n        isError: true,\n      })\n\n      return\n    }\n\n    this.props.onAddTodo(this.props.listID, name)\n\n    this.setState({\n      name: \"\",\n      isError: false,\n    })\n  }\n\n  render() {\n    const { isError } = this.state\n\n    return (\n      <form onSubmit={this.handleSubmit} className=\"nes-field is-inline\">\n        <input\n          type=\"text\"\n          id=\"inline_field\"\n          className={isError ? \"nes-input is-error\" : \"nes-input\"}\n          placeholder={isError ? \"Пусто!\" : \"Добавить задачу\"}\n          value={this.state.name}\n          onChange={this.handleChange}\n          autoComplete=\"off\"\n        />\n        <button type=\"submit\" className=\"nes-btn is-primary\">\n          +\n        </button>\n      </form>\n    )\n  }\n}\n","import React, { Fragment } from \"react\"\n\nexport const ProgressBarForList = ({ todos }) => {\n  const todosCount = todos.length\n  const isDoneTodosCount = todos.filter((todo) => todo.isDone).length\n\n  return (\n    <Fragment>\n      <p className=\"progress-bar-label\">Ваш прогресс:</p>\n      <progress\n        className=\"nes-progress is-success\"\n        value={isDoneTodosCount}\n        max={todosCount}\n      />\n    </Fragment>\n  )\n}\n","import React from \"react\"\n\nexport const TodosFilter = ({ onFilterTodo, filter }) => {\n  return (\n    <div className=\"form_part\">\n      <label htmlFor=\"filter_select\" className=\"filter_select\">\n        Фильтр:\n      </label>\n      <div className=\"nes-select is-dark\">\n        <select\n          required\n          id=\"filter_select\"\n          className=\"filter_select\"\n          onChange={(e) => onFilterTodo(e.target.value)}\n          value={filter}\n        >\n          <option value=\"\" disabled hidden>\n            Показать\n          </option>\n          <option value=\"undone\" className=\"nes-pointer\">\n            Невыполненные\n          </option>\n          <option value=\"done\" className=\"nes-pointer\">\n            Выполненные\n          </option>\n          <option value=\"all\" className=\"nes-pointer\">\n            Все\n          </option>\n        </select>\n      </div>\n    </div>\n  )\n}\n","import React, { Component } from \"react\"\nimport { TodosList } from \"./todos-list/todos-list\"\nimport { AddTodoForm } from \"./add-todo-form\"\nimport { ProgressBarForList } from \"./progress-bar-for-list\"\nimport { TodosFilter } from \"./todos-filter\"\nimport { filterTodosByType } from \"../app-helpers/filter-todos-by-type\"\n\nexport class List extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      filter: \"\",\n    }\n  }\n\n  handleFilterTodo = (type) => {\n    this.setState({\n      filter: type,\n    })\n  }\n\n  render() {\n    const { list } = this.props\n    const { title, description, todos } = list\n    const { onAddTodo, onDeleteList, onToggleTodo, onDeleteTodo } = this.props\n\n    const hasTodos = todos.length > 0\n    const filteredTodos = filterTodosByType(todos, this.state.filter)\n\n    return (\n      <div\n        className=\"nes-container is-dark with-title\"\n        style={{ marginTop: \"10px\" }}\n      >\n        <p className=\"title\">{title}</p>\n        <p>{description}</p>\n        {hasTodos ? (\n          <TodosList\n            todos={filteredTodos}\n            listID={list.id}\n            onDeleteTodo={onDeleteTodo}\n            onToggleTodo={onToggleTodo}\n          />\n        ) : (\n          <p>Здесь пока ничего нет!</p>\n        )}\n        <AddTodoForm onAddTodo={onAddTodo} listID={list.id} />\n        {hasTodos && <ProgressBarForList todos={todos} />}\n        {hasTodos && (\n          <TodosFilter\n            onFilterTodo={this.handleFilterTodo}\n            filter={this.state.filter}\n          />\n        )}\n        <button\n          className=\"nes-btn is-error col-12\"\n          onClick={() => onDeleteList(list.id)}\n        >\n          Удалить список\n        </button>\n      </div>\n    )\n  }\n}\n","/**\n * Отфильтровать список тудушек внутри одного списка задач\n *\n * @param {*} todos Тудушки\n * @param {*} type Тип фильтра // all, done, undone\n */\nexport const filterTodosByType = (todos, type = \"all\") => {\n  let filteredTodos = []\n  switch (type) {\n    case \"all\":\n      filteredTodos = [...todos]\n      break\n    case \"done\":\n      filteredTodos = todos.filter((todo) => todo.isDone)\n      break\n    case \"undone\":\n      filteredTodos = todos.filter((todo) => !todo.isDone)\n      break\n    default:\n      filteredTodos = [...todos]\n  }\n\n  return filteredTodos\n}\n","import React, { Component } from \"react\"\n\nexport class AddListForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      isError: false,\n    }\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { title, description } = this.state\n\n    // Проверка на пустое поле названия списка\n    if (title === \"\") {\n      this.setState({\n        isError: true,\n      })\n\n      return\n    }\n\n    this.props.onSubmit(title, description)\n\n    this.setState({\n      title: \"\",\n      description: \"\",\n      isError: false,\n    })\n  }\n\n  handleChangeTitle = (e) => {\n    this.setState({\n      title: e.target.value,\n    })\n  }\n\n  handleChangeDescription = (e) => {\n    this.setState({\n      description: e.target.value,\n    })\n  }\n\n  render() {\n    const { title, description, isError } = this.state\n\n    return (\n      <div className=\"nes-container with-title\">\n        <p className=\"title\">Добавить</p>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"nes-field\">\n            <label htmlFor=\"name_field\">Название списка:</label>\n            <input\n              type=\"text\"\n              id=\"name_field\"\n              className={isError ? \"nes-input is-error\" : \"nes-input\"}\n              value={title}\n              onChange={this.handleChangeTitle}\n              autoComplete=\"off\"\n              placeholder={\n                isError\n                  ? \"Имя списка не может быть пустым!\"\n                  : \"Введите название\"\n              }\n            />\n          </div>\n          <label htmlFor=\"list-description\">Описание списка:</label>\n          <textarea\n            id=\"list-description\"\n            className=\"nes-textarea\"\n            value={description}\n            onChange={this.handleChangeDescription}\n          ></textarea>\n          <button type=\"submit\" className=\"nes-btn is-primary\">\n            Добавить\n          </button>\n        </form>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport Row from \"react-bootstrap/Row\"\nimport { Col } from \"react-bootstrap\"\n\nexport const About = () => {\n  return (\n    <div className=\"nes-container with-title\" style={{ margin: \"1rem 0\" }}>\n      <p className=\"title\">Эбаут</p>\n      <Row>\n        <Col md={6}>\n          <ul className=\"nes-list is-disc\">\n            <li>\n              Сделано с помощью{\" \"}\n              <a\n                href=\"https://reactjs.org/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                React\n              </a>\n            </li>\n            <li>\n              Стилизовано с помощью{\" \"}\n              <a\n                href=\"https://nostalgic-css.github.io/NES.css/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                NES.css\n              </a>\n            </li>\n            <li>\n              Разработано{\" \"}\n              <a\n                href=\"https://frwellmonalisa.github.io/\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                frwellmonalisa\n              </a>\n            </li>\n            <li>\n              Код на{\" \"}\n              <a\n                href=\"https://github.com/frwellmonalisa/8bit-todo-list\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n              >\n                GitHub\n              </a>\n            </li>\n          </ul>\n        </Col>\n        <Col\n          md={6}\n          className=\"d-flex align-items-center justify-content-center \"\n        >\n          <i className=\"nes-octocat animate\"></i>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n","/**\n * Функция, вставляющая элемент на место index в список list и возвращающая новый массив\n *\n * @param list Список\n * @param index Индекс вставки\n * @param element Вставляемый элемент\n */\nexport const insertOnIndex = (list, index, element) => {\n    return [...list.slice(0, index), element, ...list.slice(index + 1)];\n};\n","/**\n * Найти список и его индекс по переданному id и вернуть в виде массива\n *\n * @param lists Список списков\n * @param id Переданный id\n */\nexport const findListById = (lists, id) => {\n    return [\n        lists.find((item) => item.id === id),\n        lists.findIndex((item) => item.id === id),\n    ];\n};\n","/**\n *\n * Обновить localStorage новыми данными о списках todo\n *\n * @param {*} data Данные списков в JSON строке\n */\n\nexport const updateLocalStorage = (data) => {\n  localStorage.setItem(\"lists\", data)\n}\n","import React, { Component } from \"react\"\nimport Container from \"react-bootstrap/Container\"\nimport Row from \"react-bootstrap/Row\"\nimport Col from \"react-bootstrap/Col\"\n\nimport { List } from \"./components/list\"\nimport { AddListForm } from \"./components/add-list-form\"\nimport { About } from \"./components/about\"\n\nimport { insertOnIndex } from \"./app-helpers/insert-on-index\"\nimport { createNewTodo } from \"./app-helpers/create-new-todo\"\nimport { findListById } from \"./app-helpers/find-list-by-id\"\nimport { findTodoById } from \"./app-helpers/find-todo-by-id\"\nimport { createNewList } from \"./app-helpers/create-new-list\"\nimport { updateLocalStorage } from \"./app-helpers/update-local-storage\"\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      lists: [],\n    }\n  }\n\n  componentDidMount() {\n    const data = localStorage.getItem(\"lists\")\n    const lists = data ? JSON.parse(data) : []\n    this.setState({ lists: lists })\n  }\n\n  handleAddList = (title, description) => {\n    const newList = createNewList(title, description)\n\n    this.setState(\n      {\n        lists: [...this.state.lists, newList],\n      },\n      () => updateLocalStorage(JSON.stringify(this.state.lists))\n    )\n  }\n\n  handleDeleteList = (listID) => {\n    const filtered = this.state.lists.filter((list) => list.id !== listID)\n\n    this.setState(\n      {\n        lists: filtered,\n      },\n      () => updateLocalStorage(JSON.stringify(this.state.lists))\n    )\n  }\n\n  handleAddTodo = (listID, name) => {\n    const newTodo = createNewTodo(name)\n\n    const [listToEdit, listToEditIndex] = findListById(this.state.lists, listID)\n\n    // Создаем обновленный список\n    const editedList = {\n      ...listToEdit,\n      todos: [...listToEdit.todos, newTodo],\n    }\n\n    this.setState(\n      {\n        lists: insertOnIndex(this.state.lists, listToEditIndex, editedList),\n      },\n      () => updateLocalStorage(JSON.stringify(this.state.lists))\n    )\n  }\n\n  handleToggleTodo = (listID, todoID) => {\n    const [listToEdit, listToEditIndex] = findListById(this.state.lists, listID)\n    const [todoToEdit, todoToEditIndex] = findTodoById(listToEdit.todos, todoID)\n\n    const editedTodo = { ...todoToEdit, isDone: !todoToEdit.isDone } // Сам тоггл\n    const editedList = {\n      ...listToEdit,\n      todos: insertOnIndex(listToEdit.todos, todoToEditIndex, editedTodo),\n    } // Вставка в список\n\n    this.setState(\n      {\n        lists: insertOnIndex(this.state.lists, listToEditIndex, editedList),\n      },\n      () => updateLocalStorage(JSON.stringify(this.state.lists))\n    )\n  }\n\n  handleDeleteTodo = (listID, todoID) => {\n    const [listToEdit, listToEditIndex] = findListById(this.state.lists, listID)\n\n    const editedList = {\n      ...listToEdit,\n      todos: listToEdit.todos.filter((todo) => todo.id !== todoID),\n    }\n\n    this.setState(\n      {\n        lists: insertOnIndex(this.state.lists, listToEditIndex, editedList),\n      },\n      () => updateLocalStorage(JSON.stringify(this.state.lists))\n    )\n  }\n\n  render() {\n    const lists = this.state.lists.map((list) => (\n      <Col lg={6} key={list.id}>\n        <List\n          list={list}\n          onAddTodo={this.handleAddTodo}\n          onDeleteList={this.handleDeleteList}\n          onToggleTodo={this.handleToggleTodo}\n          onDeleteTodo={this.handleDeleteTodo}\n        />\n      </Col>\n    ))\n\n    return (\n      <Container>\n        <Row className=\"my-4\">\n          <Col>\n            <h1 className=\"text-center\">8Bit ToDo List</h1>\n            <div className=\"nes-container is-dark is-centered\">\n              <p>\n                Привет! Это классический туду лист. Он настолько классический,\n                что даже оформление у него в духе игр 8-битной эпохи. Заведи\n                свои списки прямо сейчас! Данные будут храниться в твоем\n                браузере, пока ты не почистишь кэш.\n              </p>\n            </div>\n          </Col>\n        </Row>\n        <Row className=\"my-4\">\n          <Col md={4}>\n            <div className=\"nes-balloon from-left\">\n              <p>\n                Воспользуйся формой рядом со мной, чтобы добавить новый список!\n              </p>\n            </div>\n            <i className=\"nes-mario\"></i>\n          </Col>\n          <Col md={8}>\n            <AddListForm onSubmit={this.handleAddList} />\n          </Col>\n        </Row>\n        <Row>{lists}</Row>\n        <About />\n      </Container>\n    )\n  }\n}\n","import shortid from \"shortid\";\n\nexport const createNewList = (title, description) => {\n    return { id: shortid(), title, description, todos: [] };\n};\n","import shortid from \"shortid\";\n\nexport const createNewTodo = (name) => {\n    return { id: shortid(), name, isDone: false };\n};\n","/**\n * Найти todo в todo листе и его индекс по переданному id и вернуть в виде массива\n *\n * @param list ToDo лист\n * @param id Переданный ID\n */\nexport const findTodoById = (list, id) => {\n    return [\n        list.find((item) => item.id === id),\n        list.findIndex((item) => item.id === id),\n    ];\n};\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport \"bootstrap/dist/css/bootstrap-grid.min.css\"\nimport { App } from \"./app\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}